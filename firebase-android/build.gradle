apply plugin: 'com.android.library'
android {
    compileSdkVersion 24
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    jcenter()
    maven {
        url  'http://dl.bintray.com/akha/firebomb'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:24.2.1'
    testCompile 'junit:junit:4.12'
    compile 'firebomb:core:0.2.0'
    provided 'com.google.firebase:firebase-database:9.4.0'
}

apply plugin: 'com.github.dcendents.android-maven'
task createPom {
        pom {
            project {
                packaging 'aar'
                name = project.packageName
                description = project.description
                url = project.websiteUrl
            }
        }.writeTo("$buildDir/poms/pom-default.xml")
}
build.dependsOn createPom

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

apply plugin: 'com.jfrog.bintray'
bintray {
    user = bintrayUser
    key = bintrayKey
    configurations = ['archives']

    pkg {
        repo = project.group
        name = project.packageName
        websiteUrl = project.websiteUrl
        issueTrackerUrl = project.issueTrackerUrl
        licenses = [project.license]
        vcsUrl = project.vcsUrl
        githubRepo = project.githubRepo
        publicDownloadNumbers = true
        publish = true
        override = true
    }
}
